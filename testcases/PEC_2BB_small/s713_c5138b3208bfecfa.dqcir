#QCIR-14
forall(G2,G3,G4,G9,G10,G11,G12,G13,G14,G15,G16,G17,G18,G19,G20,G21,G22,G23,G24,G25,G26,G28,G30,G31,G32,G33,G34,G35,G36,G64,G65,G66,G67,G68,G69,G70,G71,G72,G73,G74,G75,G76,G77,G78,G79,G80,G81,G82,G91,G94)
depend($I314,G10,G11,G13,G3,G67,G9)
depend($I300,G10,G11,G13,G3,G65,G9)
output(RES)

#! $I314 $I300
w1 = and(-G4, G69)
w2 = and(-G4, G71)
w3 = and(-G4, G73)
w4 = and(-G3, -G11)
w5 = and(-G3, -G11)
w6 = and(-G3, -G11)
w7 = and(-G3, -G11)
w8 = and(-G3, -G9, -G10, -G13)
w9 = and(-G3, -G9, G10, -G13)
wa = and(-G3, G9, -G10, -G13)
wb = and(-G3, G9, G10, -G13)
wc = or(w5, w9, G65)
wd = or(w7, G67, wb)
we = or(-wc, wc)
wf = or(-wd, wd)
w10 = or(-we, -wc)
w11 = or(-wf, -wd)
w12 = and(w10, G23)
w13 = and(w11, G25)
w14 = and(-w10, -G23)
w15 = and(-w11, -G25)
w16 = and(w13, G68)
w17 = and(w12, G72)
w18 = or(G3, w13)
w19 = or(G3, w12)
w1a = and(w18, G78)
w1b = and(w19, G76)
w1c = and(G9, G10, w16, -G13)
w1d = and(-G9, G10, w17)
w1e = and(w2, -G13, w1d)
w1f = and(-w16, -G36)
w20 = and(-w17, -G32)
w21 = and(-G2, G66, -w1a)
w22 = and(-G2, G64, -w1b)
w23 = or(w6, w21, wa)
w24 = and(-w1a, -G17)
w25 = and(-w1b, -G15)
w26 = or(-w23, w23)
w27 = or(-w26, -w23)
w28 = and(w27, G24)
w29 = and(-w27, -G24)
w2a = and(w28, G70)
w2b = or(G3, w28)
w2c = and(w2b, G77)
w2d = and(G9, -G10, w2a)
w2e = and(w2a, w1, w16, -G11)
w2f = and(w1, -G13, w2d)
w30 = and(-w2a, -G34)
w31 = and(-w2c, -w1a, w22)
w32 = or(w4, w8, w31)
w33 = and(-w2c, -G16)
w34 = or(-w32, w32)
w35 = or(-w34, -w32)
w36 = and(w35, G22)
w37 = and(-w35, -G22)
w38 = and(w36, G74)
w39 = or(G3, w36)
w3a = and(w39, G75)
w3b = and(-G9, -G10, w38)
w3c = and(w38, w3, w17, w2)
w3d = and(w3, -G13, w3b)
w3e = and(w3c, w2e)
w3f = or(-G12, w3d, w2f)
w40 = or(w1e, w1c, w3e, w3f)
w41 = and(-w38, -G30)
w42 = or(-w40, w40)
w43 = or(-w42, -w40)
w44 = and(-w3a, -G14)
w45 = and(w43, G26)
w46 = and(-G4, G69)
w47 = and(-G4, G71)
w48 = and(-G4, G73)
w49 = and(-G3, -G11)
w4a = and(-G3, -G11)
w4b = and(-G3, -G11)
w4c = and(-G3, -G11)
w4d = and(-G3, -G9, -G10, -G13)
w4e = and(-G3, -G9, G10, -G13)
w4f = and(-G3, G9, -G10, -G13)
w50 = and(-G3, G9, G10, -G13)
w51 = or(w4a, w4e, G65)
w52 = or(w4c, G67, w50)
w53 = or(-$I300, -w51)
w54 = or(-$I314, -w52)
w55 = and(w53, G23)
w56 = and(w54, G25)
w57 = and(-w53, -G23)
w58 = and(-w54, -G25)
w59 = and(w56, G68)
w5a = and(w55, G72)
w5b = or(G3, w56)
w5c = or(G3, w55)
w5d = and(w5b, G78)
w5e = and(w5c, G76)
w5f = and(G9, G10, w59, -G13)
w60 = and(-G9, G10, w5a)
w61 = and(w47, -G13, w60)
w62 = and(-w59, -G36)
w63 = and(-w5a, -G32)
w64 = and(-G2, G66, -w5d)
w65 = and(-G2, G64, -w5e)
w66 = or(w4b, w64, w4f)
w67 = and(-w5d, -G17)
w68 = and(-w5e, -G15)
w69 = or(-w66, w66)
w6a = or(-w69, -w66)
w6b = and(w6a, G24)
w6c = and(-w6a, -G24)
w6d = and(w6b, G70)
w6e = or(G3, w6b)
w6f = and(w6e, G77)
w70 = and(G9, -G10, w6d)
w71 = and(w6d, w46, w59, -G11)
w72 = and(w46, -G13, w70)
w73 = and(-w6d, -G34)
w74 = and(-w6f, -w5d, w65)
w75 = or(w49, w4d, w74)
w76 = and(-w6f, -G16)
w77 = or(-w75, w75)
w78 = or(-w77, -w75)
w79 = and(w78, G22)
w7a = and(-w78, -G22)
w7b = and(w79, G74)
w7c = or(G3, w79)
w7d = and(w7c, G75)
w7e = and(-G9, -G10, w7b)
w7f = and(w7b, w48, w5a, w47)
w80 = and(w48, -G13, w7e)
w81 = and(w7f, w71)
w82 = or(-G12, w80, w72)
w83 = or(w61, w5f, w81, w82)
w84 = and(-w7b, -G30)
w85 = or(-w83, w83)
w86 = or(-w85, -w83)
w87 = and(-w7d, -G14)
w88 = and(w86, G26)
w89 = or(-w1f, w62)
w8a = or(-w62, w1f)
w8b = and(w89, w8a)
w8c = or(-w44, w87)
w8d = or(-w87, w44)
w8e = and(w8c, w8d)
w8f = or(-w25, w68)
w90 = or(-w68, w25)
w91 = and(w8f, w90)
w92 = or(-w33, w76)
w93 = or(-w76, w33)
w94 = and(w92, w93)
w95 = or(-w24, w67)
w96 = or(-w67, w24)
w97 = and(w95, w96)
w98 = or(-w37, w7a)
w99 = or(-w7a, w37)
w9a = and(w98, w99)
w9b = or(-w14, w57)
w9c = or(-w57, w14)
w9d = and(w9b, w9c)
w9e = or(-w29, w6c)
w9f = or(-w6c, w29)
wa0 = and(w9e, w9f)
wa1 = or(-w15, w58)
wa2 = or(-w58, w15)
wa3 = and(wa1, wa2)
wa4 = or(-w45, w88)
wa5 = or(-w88, w45)
wa6 = and(wa4, wa5)
wa7 = or(-w41, w84)
wa8 = or(-w84, w41)
wa9 = and(wa7, wa8)
waa = or(-w20, w63)
wab = or(-w63, w20)
wac = and(waa, wab)
wad = or(-w30, w73)
wae = or(-w73, w30)
waf = and(wad, wae)
wb0 = and(w8b, w8e, w91, w94, w97, w9a, w9d, wa0, wa3, wa6, wa9, wac, waf)

#! end
RES = and(wb0)
